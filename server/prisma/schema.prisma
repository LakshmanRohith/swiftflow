generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now()) @map("created_at")
  projects     Project[]

  @@map("users")
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks       Task[]

  @@unique([userId, title])
  @@map("projects")
}

model Task {
  id          String      @id @default(uuid())
  title       String
  description String?
  status      Status      @default(todo)
  priority    Priority    @default(none)
  createdAt   DateTime    @default(now()) @map("created_at")
  dueDate     DateTime?   @map("due_date")
  projectId   String      @map("project_id")
  position    Float
  comments    Comment[]
  labels      TaskLabel[]
  project     Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId])
  @@map("tasks")
}

model Label {
  id    String      @id @default(uuid())
  name  String      @unique
  color String?
  tasks TaskLabel[]

  @@map("labels")
}

model TaskLabel {
  taskId  String @map("task_id")
  labelId String @map("label_id")
  label   Label  @relation(fields: [labelId], references: [id], onDelete: Cascade)
  task    Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@id([taskId, labelId])
  @@map("task_labels")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  taskId    String   @map("task_id")
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@map("comments")
}

enum Status {
  todo
  in_progress
  done
  canceled
}

enum Priority {
  none
  low
  medium
  high
}
